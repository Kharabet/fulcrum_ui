{"version":3,"file":"bitski-connector.cjs.production.min.js","sources":["../src/index.ts"],"sourcesContent":["import { ConnectorUpdate } from '@web3-react/types'\r\nimport { AbstractConnector } from '@web3-react/abstract-connector'\r\n// @ts-ignore\r\nimport { AuthenticationStatus, Bitski, BitskiSDKOptions, BitskiEngine ,User } from \"bitski\";\r\n\r\nconst chainIdToNetwork: { [network: number]: string } = {\r\n  1: 'mainnet',\r\n  42: 'kovan'\r\n}\r\n\r\n\r\ninterface BitskiConnectorArguments {\r\n  clientId: string;\r\n  network: number;\r\n  redirectUri?: string;\r\n  additionalScopes?: string[];\r\n  options?: BitskiSDKOptions;\r\n}\r\n\r\nexport class BitskiConnector extends AbstractConnector {\r\n  private readonly networkName: any;\r\n  private readonly chainId: number;\r\n\r\n  public bitski: any\r\n\r\n  constructor({ clientId, network, redirectUri, additionalScopes, options }: BitskiConnectorArguments) {\r\n    super()\r\n    this.bitski = new Bitski(\r\n      clientId,\r\n      redirectUri,\r\n      additionalScopes,\r\n      options\r\n    )\r\n    this.chainId = network;\r\n    this.networkName = chainIdToNetwork[network];\r\n  }\r\n\r\n  public async activate(): Promise<ConnectorUpdate> {\r\n\r\n\r\n    const provider = await this.getProvider()\r\n\r\n    const account = await this.bitski.signIn().then((user: User): string => user.accounts[0])\r\n\r\n    return { provider, account }\r\n  }\r\n\r\n  public async getProvider(): Promise<BitskiEngine> {\r\n\r\n    return await this.bitski.getProvider(this.networkName);\r\n  }\r\n\r\n  public async getChainId(): Promise<number | string> {\r\n    return this.chainId;\r\n  }\r\n\r\n  public async getAccount(): Promise<null | string> {\r\n\r\n    return (await this.bitski.getUser()).accounts[0] || null;\r\n  }\r\n\r\n  public async deactivate() {\r\n    await this.bitski.signOut();\r\n  }\r\n}"],"names":["chainIdToNetwork","clientId","network","redirectUri","additionalScopes","options","bitski","Bitski","chainId","networkName","activate","this","_this3","getProvider","provider","signIn","then","user","accounts","account","getChainId","getAccount","getUser","_this8$bitski$getUser","deactivate","signOut","AbstractConnector"],"mappings":"6KAKA,IAAMA,EAAkD,GACnD,aACC,yEAkBUC,IAAAA,SAAUC,IAAAA,QAASC,IAAAA,YAAaC,IAAAA,iBAAkBC,IAAAA,qCAEzDC,OAAS,IAAIC,SAChBN,EACAE,EACAC,EACAC,KAEGG,QAAUN,IACVO,YAAcT,EAAiBE,gHAGzBQ,8BAGYC,4BAAAC,EAAKC,8BAAtBC,0BAEgBF,EAAKN,OAAOS,SAASC,MAAK,SAACC,UAAuBA,EAAKC,SAAS,sBAAhFC,SAEC,CAAEL,SAAAA,EAAUK,QAAAA,+CAGRN,kDAEEF,KAAKL,OAAOO,YAAZF,KAA6BF,oDAG/BW,iDACJT,KAAKH,+CAGDa,iDAEGV,KAAKL,OAAOgB,oCAAnBC,EAA8BL,SAAS,IAAM,8CAGzCM,iDACLb,KAAKL,OAAOmB,uEA3CeC"}